{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_services/Agent.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/token-storage.service.ts","./src/app/add-client-form/add-client-form.component.ts","./src/app/add-client-form/add-client-form.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/change-password/change-password.component.ts","./src/app/change-password/change-password.component.html","./src/app/contact-us/contact-us.component.ts","./src/app/contact-us/contact-us.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/list-agent/list-agent.component.ts","./src/app/list-agent/list-agent.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ChangePasswordRequestAgent } from './../interfaces/ChangePasswordRequestAgent';\nimport { Client } from '../interfaces/Client';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nconst httpOptions = {\n\theaders: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgentService {\n\n    private agentUrl: string;\n\n\t// tslint:disable-next-line: indent\n\tconstructor(private http: HttpClient) {\n\t\t// tslint:disable-next-line: indent\n\t\tthis.agentUrl = 'http://localhost:8080/api/auth/';\n\t}\n\n  public saveClient(\n\tusername:String,\n\tnom:String,\n\tprenom:String,\n\tnumTel:String,\n\temail:String,\n\n\t\n\t) {\n\t\treturn this.http.post(this.agentUrl + 'client/add',\n\t\t {\n\t\t\tusername,nom,prenom,email,numTel\n\t\t},\n\t\t\n\t\t{responseType: 'text'}\n\t\t);\n\t}\n\n\n  public findAllClients(): Observable<Client[]> {\n\t\treturn this.http.get<Client[]>(\n\t\t'http://localhost:8080/adminController/listClients'\n\t\t);\n\n\n}\npublic deleteClient(clientId: number): Observable<any> {\n  return this.http.delete(`${this.agentUrl}/deleteClient/${clientId}`);\n}\n\npublic ChangePassword(\n\tchangePasswordRequestAgent:ChangePasswordRequestAgent\n){\n\n   return this.http.post(this.agentUrl + \"agent/changePassword\",\n   changePasswordRequestAgent,\n   {responseType: 'text'}\n   \n  );\n}\n\npublic getAgentHasFirstAuth(\n\tusername:string\n){\n\treturn this.http.post<any>(this.agentUrl + \"agent/changedPassword\",username,httpOptions)\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'AgentSignin', {\n      username,\n      password\n    }, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nconst TOKEN_KEY = 'auth-token';\nconst ADMIN_KEY = 'auth-user';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor() { }\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n  public saveAgent(agent: any): void {\n    window.sessionStorage.removeItem(ADMIN_KEY);\n    window.sessionStorage.setItem(ADMIN_KEY, JSON.stringify(agent));\n  }\n  public getAgent(): any {\n    const user = window.sessionStorage.getItem(ADMIN_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n    return {};\n  }\n}","import { TokenStorageService } from './../_services/token-storage.service';\nimport { AgentService } from './../_services/Agent.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nconst AgentHasntChangedPassword = false;\n@Component({\n  selector: 'app-add-client-form',\n  templateUrl: './add-client-form.component.html',\n  styleUrls: ['./add-client-form.component.css']\n})\nexport class AddClientFormComponent implements OnInit {\n\n  username=window.sessionStorage.getItem(\"username\");\n  AgentHasFirstAuthentication :Boolean;\n  errorMessage:String;\n  client={\n\n    userName:\"\",\n    firstName:\"\",\n    lastName:'',\n    email:'',\n    phoneNumber:'',\n\n  }\n  constructor(private agentService:AgentService,\n    private tokenService :TokenStorageService,\n    private router: Router\n    ) { }\n\n  ngOnInit(): void {\n     \n    if(this.tokenService.getToken()==null){\n      this.router.navigate(['/home']); \n    }\n    \n    if(this.tokenService.getToken()!=null){\n    this.agentService.getAgentHasFirstAuth(this.username).subscribe({\n      next: data => {\n        console.log(data);\n        if(data==AgentHasntChangedPassword){\n          this.router.navigate(['admin/changePassword']); \n        }\n      \n      },\n      error: err => {\n        console.log(\"erreur while getting firstauth\")\n      }\n    });\n  }\n}\n\n  addClientFormSubmited(){\n\n    this.agentService.saveClient(\n      this.client.userName,\n      this.client.firstName,\n      this.client.lastName,\n      this.client.email,\n      this.client.phoneNumber\n      ).subscribe(\n        {\n          next: data => {\n            this.reloadPage();\n          },\n          error: err => {\n            this.errorMessage = err.error.message;\n            console.log(err.error.message);\n          6\n          }\n         \n        }\n      )\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n\n\n}\n  }\n","<main  class=\"main\">\n    <div class=\"container  mainContainer\">\n          \n        <div class=\"container-fluid px-0 py-0  formContainer\">\n            <div class=\"row d-flex justify-content-center\">\n                <div class=\"col-6 text-center\">\n                  \n                    <div class=\"card\">\n                        <h5 class=\"text-center mb-4 white-text\">Remplissez les informations du client ici :</h5>\n        \n                        <form class=\"form-card\" #AgentAddForm=\"ngForm\" (ngSubmit)=\"addClientFormSubmited()\">\n                            \n                            <div class=\"row justify-content-between text-left\">\n                                <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <label class=\"form-control-label px-3 white-text\">Nom d'utilisateu\n                                        <span class=\"text-danger\"> *</span></label>\n        \n                                         <input type=\"text\"\n                                         [(ngModel)]=\"client.userName\"\n                                         #FirstName=\"ngModel\"\n                                          id=\"fname\" \n                                          name=\"fname\"\n                                           placeholder=\"Entrer votre Prénom\" \n                                           required \n                                           pattern=\"[a-zA-Z]+\"> \n                                        </div>\n                            </div>\n        \n                            <div class=\"row justify-content-between text-left\">\n                                <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <label class=\"form-control-label px-3 white-text\">Prénom\n                                        <span class=\"text-danger\"> *</span></label>\n        \n                                         <input type=\"text\"\n                                         [(ngModel)]=\"client.firstName\"\n                                         #FirstName=\"ngModel\"\n                                          id=\"fname\" \n                                          name=\"fname\"\n                                           placeholder=\"Entrer Votre Prénon\" \n                                           required \n                                           pattern=\"[a-zA-Z]+\"> \n                                        </div>\n        \n                                       \n                                <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <label class=\"form-control-label px-3 white-text\">Nom\n                                        <span class=\"text-danger\"> *</span></label> \n                                        \n                                        <input type=\"text\" \n                                        [(ngModel)]=\"client.lastName\"\n                                        #LastName=\"ngModel\"\n                                        id=\"lname\" \n                                        name=\"lname\" \n                                        placeholder=\"Entrer Votre Nom\" \n                                        required\n                                        pattern=\"[a-zA-Z]+\"> </div>\n                                        \n                                      \n                            </div>\n        \n                            <div class=\"row justify-content-between text-left\">\n                                <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <div *ngIf=\"(FirstName.touched && !FirstName.valid)\">\n                                        <div class=\"alert alert-danger\" *ngIf=\"(FirstName.errors && FirstName.errors.required)\"> Le champ Prénom est requis</div>\n                                        <div class=\"alert alert-danger\"*ngIf=\"(FirstName.errors && FirstName.errors.pattern)\" > Format invalide pour le prénom</div>\n                                       \n                                    </div></div>\n                                    <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <div *ngIf=\"(LastName.touched && !LastName.valid) \">\n                                       \n                                        <div class=\"alert alert-danger\" *ngIf=\"(LastName.errors && LastName.errors.required)\"> Le champ Nom est requis</div>\n                                        <div class=\"alert alert-danger\"*ngIf=\"(LastName.errors && LastName.errors.pattern)\" > Format invalide pour le Nom</div>\n                                    </div>\n                                    </div>\n                                </div>\n                           \n        \n                            <div class=\"row justify-content-between text-left\">\n        \n                                <div class=\"form-group col-sm-6 flex-column d-flex\">\n        \n                                     <label class=\"form-control-label px-3 white-text\">Adresse Email\n                                         <span class=\"text-danger\"> *</span></label> \n                                         \n                                         <input type=\"text\"\n                                         [(ngModel)]=\"client.email\"\n                                         #AgentEmail=\"ngModel\" \n                                         id=\"Agentemail\" \n                                         name=\"AgentEmail\" \n                                         placeholder=\"Ex: john.doe@gmail.com\"\n                                         required \n                                         pattern=\"^[a-zA-Z0-9.]+@gmail.com$\">\n                                 </div>\n        \n                                 <div class=\"form-group col-sm-6 flex-column d-flex\">\n        \n                                    <label class=\"form-control-label px-3  white-text\">Numéro De Tel\n                                        <span class=\"text-danger\"> *</span></label> \n                                        \n                                        <input type=\"text\"\n                                        [(ngModel)]=\"client.phoneNumber\"\n                                        #AgentPhoneNumber=\"ngModel\" \n                                        id=\"AgentPhoneNumber\" \n                                        name=\"AgentPhoneNumber\" \n                                        placeholder=\"Ex:+2126000000\"\n                                        required\n                                        pattern=\"[0-9+]+\"\n                                        minlength=\"10\">\n                                </div>\n        \n                               \n                               \n                            </div>\n        \n                            <div class=\"row justify-content-between text-left\">\n                                <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <div *ngIf=\"(AgentEmail.touched && !AgentEmail.valid)\">\n                                        <div class=\"alert alert-danger\" *ngIf=\"(AgentEmail.errors && AgentEmail.errors.required)\">Le champ Adresse Email est requis</div>\n                                        <div class=\"alert alert-danger\"*ngIf=\"(AgentEmail.errors &&AgentEmail.errors.pattern)\" > Format invalide pour Adresse Email</div>\n                                       \n                                    </div></div>\n                                    <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                        <div *ngIf=\"(AgentPhoneNumber.touched && !AgentPhoneNumber.valid) \">\n                                   \n                                            <div class=\"alert alert-danger\" *ngIf=\"(AgentPhoneNumber.errors && AgentPhoneNumber.errors.required)\"> Le champ Numéro De Tel est requis</div>\n                                            <div class=\"alert alert-danger\"*ngIf=\"(AgentPhoneNumber.errors && AgentPhoneNumber.errors.pattern)\" > Format invalide pour uméro De Tel</div>\n                                            <div class=\"alert alert-danger\"*ngIf=\"(AgentPhoneNumber.errors && AgentPhoneNumber.errors.minlength)\" > Le numéro de téléphone doit comporter au moins 10 chiffres</div>\n                \n                                        </div>\n                                    </div>\n                                </div>\n        \n                          \n                            <div class=\"row justify-content-center\">\n        \n                                <div class=\"form-group col-sm-6\">\n                                    \n                                    <button type=\"submit\" class=\"btn-block btn-primary\">Ajouter Client</button> </div>\n        \n                            </div>\n                      \n              \n            </form>\n        \n            </div>\n        </div>\n\n          \n    </div>\n        </div>\n    </div>\n  </main>\n","import { AddClientFormComponent } from './add-client-form/add-client-form.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from \"./login/login.component\";\n\nimport { ContactUsComponent } from \"./contact-us/contact-us.component\";\nimport{ChangePasswordComponent} from \"./change-password/change-password.component\";\nimport { ListAgentComponent } from './list-agent/list-agent.component';\n\n\nconst routes: Routes = [\n  { path: \"home\", component: HomeComponent },\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  {path:\"admin/addClient\",component:AddClientFormComponent},\n  {path:'admin/changePassword', component: ChangePasswordComponent},\n  { path: 'client', component: ListAgentComponent }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientApp';\n}\n","<div class=\"appContainer\">\n<app-nav-menu></app-nav-menu>\n<router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AddClientFormComponent } from './add-client-form/add-client-form.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ListAgentComponent } from './list-agent/list-agent.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ContactUsComponent,\n        HomeComponent,\n        LoginComponent,\n        NavMenuComponent,\n        AddClientFormComponent,\n        ChangePasswordComponent,\n        ListAgentComponent,\n       \n    ],\n    imports: [BrowserModule, FormsModule, AppRoutingModule, HttpClientModule, BrowserAnimationsModule, ReactiveFormsModule, ToastrModule.forRoot()],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { ChangePasswordRequestAgent } from './../interfaces/ChangePasswordRequestAgent';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AgentService } from '../_services/Agent.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  username= window.sessionStorage.getItem(\"username\");\n\n  changePasswordRequestAgent:ChangePasswordRequestAgent={\n   username:this.username,\n   newPassword:\"\",\n  }\n  constructor(\n    private router: Router,\n    private agentService: AgentService,\n    private tokenStorage:TokenStorageService\n  ) { }\n\n  ngOnInit(): void {\n    if(this.tokenStorage.getToken()==null){\n      this.router.navigate(['/login']); \n    }\n  }\n\n\n  changePasswordClicked(){\n    this.agentService.ChangePassword(this.changePasswordRequestAgent).subscribe({\n      next: data => {\n        this.router.navigate(['admin/addClient']);\n      },\n      error: err => {\n        console.log(\"erreur while changing password\");\n      }\n    }); \n\n  }\n\n\n}\n","<main  class=\"main\">\n    <div class=\" mainContainer\">\n          \n        <div class=\" px-0 py-0  formContainer\">\n            <div class=\"row d-flex justify-content-center\">\n                <div class=\"col-6 text-center\">\n                  \n                    <div class=\"card\">\n                        <h5 class=\"text-center mb-4\">Changeez Votre Password</h5>\n        \n                        <form class=\"form-card\" #ClientChangePassForm=\"ngForm\" (ngSubmit)=\"changePasswordClicked()\">\n                            \n                           \n                         \n                            <div class=\"row justify-content-between text-left\">\n                                <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <label class=\"form-control-label px-3\">Nouveau Password\n                                       </label>\n        \n                                         <input type=\"text\"\n                                         [(ngModel)]=\"changePasswordRequestAgent.newPassword\"\n                                         #NewPassword=\"ngModel\"\n                                          id=\"NPassword\" \n                                          name=\"NewPassword\"\n                                           required \n                                           pattern=\"[a-zA-Z0-9]+\"> \n                                        </div>\n        \n                                       \n                                <div class=\"form-group col-sm-6 flex-column d-flex\"> \n                                    <label class=\"form-control-label px-3\">Confirmez Password\n                                      </label> \n                                        \n                                        <input type=\"text\" \n                                        ngModel\n                                        #ConfirmPass=\"ngModel\"\n                                        id=\"ConfirmPass\" \n                                        name=\"ConfirmPass\" \n                                        [disabled]=\"!(NewPassword.touched && NewPassword.valid)\"\n                                        required\n                                        pattern=\"[a-zA-Z0-9]+\"> </div>\n                                        \n                                        <div *ngIf=\"(NewPassword.touched && !NewPassword.valid)\">\n                                            <div class=\"alert alert-danger\" *ngIf=\"(NewPassword.errors && NewPassword.errors.required)\">Un nouveau champ de mot de passe est requis</div>\n                                            <div class=\"alert alert-danger\"*ngIf=\"(NewPassword.errors && NewPassword.errors.pattern)\" > Format invalide pour le nouveau mot de passe : ne doit contenir que des lettres et des chiffres</div>\n                                           \n                                        </div>\n                                        <div *ngIf=\"(ConfirmPass.touched && !ConfirmPass.valid) \">\n                                           \n                                           \n                                            <div class=\"alert alert-danger\" *ngIf=\"(ConfirmPass.errors && ConfirmPass.errors.required)\">Le champ de confirmation du mot de passe est requis</div>\n\n                                           \n                                        </div>\n                                        <div *ngIf=\"ConfirmPass.value!=null && ConfirmPass.touched\">\n                                            <div class=\"alert alert-danger\"*ngIf=\"!(NewPassword.value==ConfirmPass.value)\" > Erreur:Les champs De mot de passe ne se correspondent pas !</div>\n                                       </div>\n\n                                      \n                            </div>\n        \n                            <div class=\"row justify-content-center\">\n        \n                                <div class=\"form-group col-sm-6\">\n                                    \n                                    <button type=\"submit\"\n                                     class=\"btn-block btn-primary yellow-button\"\n                                    [disabled]=\"!(NewPassword.value==ConfirmPass.value && ClientChangePassForm.valid)\">Changer Password\n                                     </button> \n                                 </div>\n        \n                            </div>\n                      \n              \n            </form>\n        \n            </div>\n        </div>\n\n          \n    </div>\n        </div>\n    </div>\n  </main>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'app-contact-us',\n    templateUrl: './contact-us.component.html',\n    styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n    contactForm: FormGroup;\n\n    constructor(private fb: FormBuilder) {}\n\n    ngOnInit(): void {\n        this.setBackgroundImage();\n        this.contactForm = this.fb.group({});\n    }\n\n    onSubmit() {\n        \n    }\n\n    setBackgroundImage() {\n        $('body').css({\n            'background-image': 'none',\n            'background-repeat': 'no-repeat',\n            'background-size': 'cover'\n        });\n    }\n}\n","<div class=\"container mb-5 mt-5\" id=\"profile\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div class=\"card-body-inner\">\n                <div class=\"col-lg-12 col-md-12\">\n                    <div class=\"contact-form\">\n                        <h3>Drop Us An Email</h3>\n                        <p>\n                            We're happy to answer any questions you have or provide you with an estimate. Just send us a message in the form below\n                            with any questions you may have.\n                        </p>\n\n                        <form id=\"contactForm\" [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-12 col-md-6\">\n                                    <label>Full Name <span>*</span></label>\n                                    <div class=\"input-group form-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"your name\" />\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-12 col-md-6\">\n                                    <label>Email <span>*</span></label>\n                                    <div class=\"input-group form-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\"><i class=\"fas fa-envelope\"></i></span>\n                                        </div>\n                                        <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Your email address\" />\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-12 col-md-12\">\n                                    <label>Phone Number <span>*</span></label>\n                                    <div class=\"input-group form-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\"><i class=\"fas fa-phone\"></i></span>\n                                        </div>\n                                        <input\n                                            type=\"text\"\n                                            name=\"phone_number\"\n                                            id=\"phone_number\"\n                                            class=\"form-control\"\n                                            placeholder=\"Your phone number\"\n                                        />\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-12 col-md-12\">\n                                    <div class=\"form-group\">\n                                        <label>Your Message <span>*</span></label>\n                                        <textarea\n                                            name=\"message\"\n                                            id=\"message\"\n                                            cols=\"30\"\n                                            rows=\"5\"\n                                            class=\"form-control\"\n                                            placeholder=\"Write your message...\"\n                                        ></textarea>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-12 col-md-12 text-center\">\n                                    <button type=\"submit\" class=\"btn btn-warning\"><i class=\"flaticon-plane\"></i> Send Message</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n      private tokenService:TokenStorageService, \n      private router: Router\n      ) { }\n\n  ngOnInit(): void {\n\n   \n\n  }\n\n}\n","<div class=\"container-fluid homeContainer\">\n    <div class=\"col-lg-6 mb-0 mb-lg-0 contentBox\" style=\"z-index: 20\">\n        <h1 class=\"my-0 display-5 fw-bold ls-tight\" style=\"color: hsl(218, 81%, 95%)\">\n          Jabak Lah <br />\n          <span style=\"color: hsl(240, 14%, 93%)\">Espace Agent</span>\n        </h1>\n        \n      <!--<button class=\" btn btn-light-moon\" routerLink=\"/login\">Log In to get Started</button>-->\n      </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { AgentService } from './../_services/Agent.service';\nimport { Client } from '../interfaces/Client';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\n\n\n\n\nconst AgentHasntChangedPassword = false;\n\n@Component({\n  selector: 'app-list-agent',\n  templateUrl: './list-agent.component.html',\n  styleUrls: ['./list-agent.component.css']\n})\nexport class ListAgentComponent implements OnInit {\n\n  \n\nusername=window.sessionStorage.getItem(\"username\");\nAgentHasFirstAuthentication :Boolean;\nclients: Client[] = [];\nfilteredClients: Client[] = [];\nsearchTerm: string = '';\n\n\nconstructor(private agentService: AgentService,\nprivate tokenService :TokenStorageService,\nprivate router: Router) { }\n\nngOnInit(): void {\n\nif(this.tokenService.getToken()==null){\nthis.router.navigate(['/home']);\n}\n\nif(this.tokenService.getToken()!=null){\nthis.agentService.getAgentHasFirstAuth(this.username).subscribe({\nnext: data => {\nconsole.log(data);\nif(data==AgentHasntChangedPassword){\nthis.router.navigate(['admin/changePassword']);\n}\n\n},\nerror: err => {\nconsole.log(\"error while getting firstauth\")\n}\n});\n\nthis.loadClients();\n}\n}\n\nloadClients(): void {\nthis.agentService.findAllClients().subscribe(\n(clients: Client[]) => {\nthis.clients = clients;\nthis.filterClients();\n},\nerror => {\nconsole.error('Error retrieving clients:', error);\n}\n);\n}\n\nfilterClients(): void {\nif (this.searchTerm.trim() === '') {\nthis.filteredClients = this.clients;\n} else {\nthis.filteredClients = this.clients.filter(client =>\nclient.nom.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\nclient.prenom.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\nclient.numTel.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\nclient.email.toLowerCase().includes(this.searchTerm.toLowerCase())\n);\n}\n}\n\n}\n","<div class=\"container-fluid homeContainer\">\n  <div class=\"col-lg-6 mb-0 mb-lg-0 contentBox\">\n    <h1 class=\"my-0 display-5 fw-bold ls-tight\">Clients</h1>\n\n    <div class=\"search-container\">\n      <input type=\"text\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"filterClients()\" placeholder=\"Search\" />\n    </div>\n\n    <div class=\"table-container\">\n      <table class=\"client-table\">\n        <thead>\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Phone</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let client of filteredClients\">\n            <td>{{ client.nom }}</td>\n            <td>{{ client.prenom }}</td>\n            <td>{{ client.email }}</td>\n            <td>{{ client.numTel }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!--<button class=\"btn btn-light-moon\" routerLink=\"/login\">Log In to get Started</button>-->\n  </div>\n</div>\n","import { AuthService } from './../_services/auth.service';\nimport { TokenStorageService } from './../_services/token-storage.service';\nimport { Component, OnInit } from '@angular/core';\nimport {\n    FormGroup,\n    FormControl,\n    FormBuilder,\n    Validators\n} from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    insertForm: FormGroup;\n    Username: FormControl;\n    Password: FormControl;\n    isLoggedIn = false;\n    isLoginFailed = false;\n    errorMessage = '';\n    roles: string[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private authService: AuthService,\n        private tokenStorage: TokenStorageService\n    ) {}\n\n    ngOnInit(): void {\n\n      if(this.tokenStorage.getToken()!=null){\n        this.router.navigate(['/admin/addClient']); \n      }else{\n      }\n\n        // Initialize Form Controls\n        this.Username = new FormControl('', [Validators.required]);\n        this.Password = new FormControl('', [Validators.required]);\n\n        // Initialize FormGroup using FormBuilder\n        this.insertForm = this.fb.group({\n            Username: this.Username,\n            Password: this.Password,\n        });\n\n\n    }\n    submitAdminLogInForm(){\n\n        const logIn = this.Username.value;\n        const password = this.Password.value;\n        this.authService.login(logIn, password).subscribe({\n          next: data => {\n            console.log(data)\n            this.tokenStorage.saveToken(data.accessToken);\n            this.tokenStorage.saveAgent(data);\n            window.sessionStorage.setItem(\"username\", logIn);\n            this.isLoginFailed = false;\n            this.isLoggedIn = true;\n            this.roles = this.tokenStorage.getAgent().roles;\n            this.router.navigate(['admin/addClient']);\n            this.reloadPage();\n          },\n          error: err => {\n            this.errorMessage = err.error.message;\n            this.isLoginFailed = true;\n          }\n         \n        });\n\n  \n  }\n  reloadPage(): void {\n    window.location.reload();\n\n\n}\n\n}\n","<div class=\"container-fluid loginContainer\">\n    <div class=\"d-flex justify-content-center h-100\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h3>Connexion</h3>\n            </div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"insertForm\" (ngSubmit)=\"submitAdminLogInForm()\">\n                    <div class=\"input-group form-group\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"\n                                ><i class=\"fas fa-user\"></i\n                            ></span>\n                        </div>\n                        <input\n                            formControlName=\"Username\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"username\"\n                        />\n                    </div>\n                    <div class=\"input-group form-group\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"\n                                ><i class=\"fas fa-key\"></i\n                            ></span>\n                        </div>\n                        <input\n                            formControlName=\"Password\"\n                            type=\"password\"\n                            class=\"form-control\"\n                            placeholder=\"password\"\n                        />\n                    </div>\n                   \n                    <div class=\"form-group\">\n                        <input\n                            type=\"submit\"\n                            value=\"Login\"\n                            class=\"btn float-right login_btn\"\n                        />\n                    </div>\n                    <div id=\"errors\">\n                        <div\n                            *ngIf=\"Username.touched && Username.errors\"\n                            class=\"errorMessage\"\n                        >\n                            <span *ngIf=\"Username.hasError('required')\"\n                                >Le champ Username est requis.</span\n                            >\n                        </div>\n                        <div\n                            *ngIf=\"Password.touched && Password.errors\"\n                            class=\"errorMessage\"\n                        >\n                            <span *ngIf=\"Password.hasError('required')\"\n                                > Le champ Password est requis</span\n                            >\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"card-footer\">\n               \n               \n            </div>\n        </div>\n    </div>\n</div>\n","import { TokenStorageService } from './../_services/token-storage.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-nav-menu',\n    templateUrl: './nav-menu.component.html',\n    styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n   \n    isLoggedIn:Boolean=false;\n    constructor(private router: Router, private tokenStorage:TokenStorageService) {}\n\n    ngOnInit(): void {\n        this.isLoggedIn= (this.tokenStorage.getToken()!=null);\n       \n\n     \n    }\n\n    onLogout() {\n        this.router.navigate(['/home']);\n        this.tokenStorage.signOut();\n        window.location.reload();    }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light fixed-top custom-bg\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\"> <span id=\"jabakSpan\">Jabak</span><span id=\"lahSpan\"> Lah</span></a>\n        <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n        >\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto\">\n\n                <li class=\"nav-item active\"  *ngIf=\"isLoggedIn\">\n                    <a class=\"nav-link\" routerLink=\"home\">\n                        Accueil\n                        <span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n               \n                <li class=\"nav-item active\"  *ngIf=\"isLoggedIn\">\n                    <a class=\"nav-link\" routerLink=\"admin/addClient\">\n                        Ajouter Client\n                        <span class=\"sr-only\"></span>\n                    </a>\n                </li>\n                <li class=\"nav-item active\"  *ngIf=\"isLoggedIn\">\n                    <a class=\"nav-link\" routerLink=\"client\">\n                       Liste Client\n                        <span class=\"sr-only\"></span>\n                    </a>\n                </li> \n            \n                \n                <li\n                    class=\"nav-item\"\n                   \n                >\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"signin\">\n                      \n                        <button\n                        type=\"button\"\n                       class=\"btn btn-outline-dark \"\n                        [routerLink]=\"['/login']\"\n                        *ngIf=\"!isLoggedIn\"\n                    >\n                        Login\n                    </button>\n                    </div>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn\"  >\n                    <!-- Topbar Navbar -->\n                    <ul class=\"navbar-nav ml-auto\">\n                        <div class=\"topbar-divider d-none d-sm-block\"></div>\n\n                        <!-- Nav Item - User Information -->\n                       \n                                <div class=\"dropdown-divider\"></div>\n                                <div class=\"p-1\">\n                                    <button\n                                        class=\"btn btn-warning w-100 mt-1\"\n                                        (click)=\"onLogout()\" >\n\n                                        <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"\n                                        ></i>\n                                        Logout\n                            </button>\n                        </div>     \n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n","\nexport const environment = {\n  production: false\n};\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}